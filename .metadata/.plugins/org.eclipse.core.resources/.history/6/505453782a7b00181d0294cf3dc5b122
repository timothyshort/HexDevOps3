Browser considerations:
- Firefox reads the plan inner HTML, whereas IE and Chrome read the post-CSS (formatted) inner HTML
- IE Options: enable experimental mode, zoom at 100%


Finding Elements:
- ID and Name preferred
- Use ID for radio button
- LinkText and PartialLinkText finds 'a' tags with the inner HTML as the parameter
- CSS Selector: defines by tag and attribute-value pairs

String API
- don't use =, use .equals(), .equalsIgnoreCase(), .contains()

Scope: Local vs Class-Level

Naming Conventions:
- variables: camel case, ex: firstNameAndLastName
- functions/methods: camel case, ex: openBrowserAndClickStart()
- classes: title case, ex: MyFreddieTest

// radio button algorithm
if (gender.equalsIgnoreCase("Male")) {
	driver.findElement(By.id("MainContent_Male")).click();
} else if (gender.equalsIgnoreCase("Female")) {
	driver.findElement(By.id("MainContent_Female")).click();
}

Thread.sleep() - forces a pause in the program for specified time (Java specific)
Waits - how long Selenium waits until throwing an error


// checkbox algorithm
// 1. decide if we want the checkbox checked
	// 2. Yes. Is it checked? > Yes? DONE | No? Click
	// 3. No. Is it checked? > Yes? Click | No? DONE
